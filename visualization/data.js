// Parse and store the simulation data
const simulationData = [
    // time(ms), width(cm), depth(cm), energy(J)
    [0.0000, 0.0000, 0.0100, 0.0000],
    [10.0001, 0.2600, 0.0300, 120.0013],
    [20.0002, 0.7400, 0.0300, 240.0026],
    [30.0003, 0.8600, 0.0500, 360.0038],
    [40.0004, 0.9800, 0.0700, 480.0051],
    [50.0001, 1.0200, 0.0900, 600.0011],
    [60.0002, 1.1000, 0.1100, 720.0024],
    [70.0003, 1.1400, 0.1300, 840.0037],
    [80.0004, 1.1800, 0.1500, 960.0050],
    [90.0001, 1.1800, 0.1700, 1080.0010],
    [100.0002, 1.2200, 0.1900, 1200.0023],
    [110.0003, 1.2600, 0.2100, 1320.0036],
    [120.0004, 1.2600, 0.2300, 1440.0048],
    [130.0001, 1.3000, 0.2500, 1560.0009],
    [140.0002, 1.3000, 0.2700, 1680.0021],
    [150.0003, 1.3400, 0.2900, 1800.0034],
    [160.0004, 1.3400, 0.2900, 1920.0047],
    [170.0001, 1.3800, 0.3100, 2040.0007],
    [180.0002, 1.3800, 0.3300, 2160.0020],
    [190.0003, 1.3800, 0.3500, 2280.0033],
    [200.0004, 1.4200, 0.3500, 2400.0046],
    [210.0000, 1.4200, 0.3700, 2520.0006],
    [220.0002, 1.4200, 0.3900, 2640.0019],
    [230.0003, 1.4600, 0.3900, 2760.0031],
    [240.0004, 1.4600, 0.4100, 2880.0044],
    [250.0000, 1.4600, 0.4100, 3000.0004],
    [260.0001, 1.5000, 0.4300, 3120.0017],
    [270.0003, 1.5000, 0.4500, 3240.0030],
    [280.0004, 1.5400, 0.4500, 3360.0043],
    [290.0000, 1.5400, 0.4700, 3480.0003],
    [300.0001, 1.5400, 0.4700, 3600.0016],
    [310.0002, 1.5800, 0.4900, 3720.0029],
    [320.0003, 1.5800, 0.4900, 3840.0042],
    [330.0000, 1.5800, 0.5100, 3960.0002],
    [340.0001, 1.6200, 0.5100, 4080.0014],
    [350.0002, 1.6200, 0.5300, 4200.0027],
    [360.0003, 1.6200, 0.5300, 4320.0040],
    [370.0000, 1.6600, 0.5500, 4440.0000],
    [380.0001, 1.6600, 0.5500, 4560.0013],
    [390.0002, 1.7000, 0.5700, 4680.0026],
    [400.0003, 1.7000, 0.5700, 4800.0039],
    [410.0004, 1.7000, 0.5900, 4920.0052],
    [420.0001, 1.7400, 0.5900, 5040.0012],
    [430.0002, 1.7400, 0.6100, 5160.0025],
    [440.0003, 1.7400, 0.6100, 5280.0037],
    [450.0004, 1.7800, 0.6300, 5400.0050],
    [460.0001, 1.7800, 0.6300, 5520.0010],
    [470.0002, 1.7800, 0.6500, 5640.0023],
    [480.0003, 1.8200, 0.6500, 5760.0036],
    [490.0004, 1.8200, 0.6500, 5880.0049],
    [500.0001, 1.8200, 0.6700, 6000.0009],
    [510.0002, 1.8600, 0.6700, 6120.0022],
    [520.0003, 1.8600, 0.6900, 6240.0035],
    [530.0004, 1.8600, 0.6900, 6360.0047],
    [540.0001, 1.8600, 0.6900, 6480.0008],
    [550.0002, 1.9000, 0.7100, 6600.0020],
    [560.0003, 1.9000, 0.7100, 6720.0033],
    [570.0004, 1.9000, 0.7300, 6840.0046],
    [580.0001, 1.9400, 0.7300, 6960.0006],
    [590.0002, 1.9400, 0.7300, 7080.0019],
    [600.0003, 1.9400, 0.7500, 7200.0032],
    [610.0004, 1.9800, 0.7500, 7320.0045],
    [620.0000, 1.9800, 0.7700, 7440.0005],
    [630.0001, 1.9800, 0.7700, 7560.0018],
    [640.0003, 1.9800, 0.7700, 7680.0030],
    [650.0004, 2.0200, 0.7900, 7800.0043]
];

// Calculate maximum values for normalization
const maxValues = {
    time: Math.max(...simulationData.map(d => d[0])),
    width: Math.max(...simulationData.map(d => d[1])),
    depth: Math.max(...simulationData.map(d => d[2])),
    energy: Math.max(...simulationData.map(d => d[3]))
}; 